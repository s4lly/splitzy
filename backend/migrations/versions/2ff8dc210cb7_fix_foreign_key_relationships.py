"""fix_foreign_key_relationships

Revision ID: 2ff8dc210cb7
Revises: ed0b1b9e0c7b
Create Date: 2025-09-02 09:56:21.207727

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2ff8dc210cb7'
down_revision = 'ed0b1b9e0c7b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Fix users table constraints
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Ensure primary key constraint exists
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=80),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               nullable=False)
        # Create unique constraints
        batch_op.create_unique_constraint('uq_users_username', ['username'])
        batch_op.create_unique_constraint('uq_users_email', ['email'])

    # Explicitly create primary key constraint for users table
    op.create_primary_key('users_pkey', 'users', ['id'])

    # Fix user_receipts table constraints
    with op.batch_alter_table('user_receipts', schema=None) as batch_op:
        # Ensure primary key constraint exists
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               nullable=False)
        # Create foreign key constraint
        batch_op.create_foreign_key('fk_user_receipts_user_id', 'users', ['user_id'], ['id'])

    # Explicitly create primary key constraint for user_receipts table
    op.create_primary_key('user_receipts_pkey', 'user_receipts', ['id'])

    # Fix receipt_line_items table constraints
    with op.batch_alter_table('receipt_line_items', schema=None) as batch_op:
        # Ensure primary key constraint exists (UUID)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               nullable=False)
        # Fix column types and constraints
        batch_op.alter_column('receipt_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('price_per_item',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=False)
        batch_op.alter_column('total_price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=False)
        # Create index and foreign key constraint
        batch_op.create_index(batch_op.f('ix_receipt_line_items_receipt_id'), ['receipt_id'], unique=False)
        batch_op.create_foreign_key('fk_receipt_line_items_receipt_id', 'user_receipts', ['receipt_id'], ['id'], ondelete='CASCADE')

    # Explicitly create primary key constraint for receipt_line_items table
    op.create_primary_key('receipt_line_items_pkey', 'receipt_line_items', ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Remove primary key constraints
    op.drop_constraint('receipt_line_items_pkey', 'receipt_line_items', type_='primary')
    op.drop_constraint('user_receipts_pkey', 'user_receipts', type_='primary')
    op.drop_constraint('users_pkey', 'users', type_='primary')
    
    # Remove receipt_line_items constraints
    with op.batch_alter_table('receipt_line_items', schema=None) as batch_op:
        batch_op.drop_constraint('fk_receipt_line_items_receipt_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_receipt_line_items_receipt_id'))
        # Revert column types
        batch_op.alter_column('total_price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=True)
        batch_op.alter_column('price_per_item',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=True)
        batch_op.alter_column('quantity',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=12, scale=2),
               nullable=True)
        batch_op.alter_column('receipt_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    # Remove user_receipts constraints
    with op.batch_alter_table('user_receipts', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_receipts_user_id', type_='foreignkey')

    # Remove users constraints
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('uq_users_email', type_='unique')
        batch_op.drop_constraint('uq_users_username', type_='unique')
        # Revert column nullability
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=80),
               nullable=True)

    # ### end Alembic commands ###
