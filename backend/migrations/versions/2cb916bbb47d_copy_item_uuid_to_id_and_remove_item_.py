"""copy_item_uuid_to_id_and_remove_item_uuid_column

Revision ID: 2cb916bbb47d
Revises: 53dbed776d5e
Create Date: 2025-08-23 17:25:12.249483

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '2cb916bbb47d'
down_revision = '53dbed776d5e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, copy data from item_uuid to id
    connection = op.get_bind()
    connection.execute(text("""
        UPDATE receipt_line_items 
        SET id = item_uuid 
        WHERE item_uuid IS NOT NULL
    """))
    
    # Then remove the item_uuid column and its index
    with op.batch_alter_table('receipt_line_items', schema=None) as batch_op:
        batch_op.drop_index('ix_receipt_line_items_item_uuid')
        batch_op.drop_column('item_uuid')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, add back the item_uuid column
    with op.batch_alter_table('receipt_line_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('item_uuid', sa.VARCHAR(length=36), nullable=True))
        batch_op.create_index('ix_receipt_line_items_item_uuid', ['item_uuid'], unique=False)
    
    # Then copy data back from id to item_uuid
    connection = op.get_bind()
    connection.execute(text("""
        UPDATE receipt_line_items 
        SET item_uuid = id 
        WHERE id IS NOT NULL
    """))
    
    # Make item_uuid not nullable after copying data
    with op.batch_alter_table('receipt_line_items', schema=None) as batch_op:
        batch_op.alter_column('item_uuid', nullable=False)

    # ### end Alembic commands ###
